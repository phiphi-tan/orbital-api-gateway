// Code generated by thriftgo (0.2.11). DO NOT EDIT.

package clients

import (
	"context"
	"fmt"
	"net/http"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/kitex/client/genericclient"
	"github.com/cloudwego/hertz/pkg/common/hlog"
	"github.com/cloudwego/kitex/pkg/kerrors"

	"github.com/phiphi-tan/orbital-api-gateway/hertz_gateway/biz/errors"
	"github.com/phiphi-tan/orbital-api-gateway/kitex_gen/common"
)

var SvcMap = make(map[string]genericclient.Client)

func GenericCall(svc string, method string, 
	ctx context.Context, c *app.RequestContext) {

	//Client Selection
	cli := SvcMap[svc]

	//JSON Generic Call
	jsonbody := string(c.Request.BodyBytes())
	fmt.Println("Attempting Generic Call")
	//Not a recursive call, this GenericCall is under the generated clients
	resp, err := cli.GenericCall(ctx, method, jsonbody)
	//Might need to add a wakeup call to kitex here

	//Generic call error handling
	if err != nil {
		hlog.Errorf("GenericCall err:%v", err)
		bizErr, ok := kerrors.FromBizStatusError(err)
		if !ok {
			c.JSON(http.StatusOK, errors.New(common.Err_ServerHandleFail))
			return
		}
		resp = errors.Err{ErrCode: int64(bizErr.BizStatusCode()), ErrMsg: bizErr.BizMessage()}
		c.JSON(http.StatusOK, resp)
		return
	}

	//Update RequestContext
	c.JSON(http.StatusOK, resp)

}